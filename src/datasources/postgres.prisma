generator client {
  provider = "prisma-client-js"
  output   = "./generated-clients/postgres"
  previewFeatures = ["metrics"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Owner {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  restaurants Restaurant[]
}

model Restaurant {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  name       String
  since      DateTime
  isOpen     Boolean    @default(false)
  opsStartTime DateTime
  opsEndTime DateTime
  ownerId    Int?
  owner      Owner?     @relation(fields: [ownerId], references: [id])
  slug       String     @unique
  description String?
  location   String
  city       String?
  menuItems  MenuItems[]
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  menuItems MenuItems[]
}

model MenuItems {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  couponCode  String?
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id])
  restaurant  Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId  Int
}

model User {
  id    Int     @id @default(autoincrement())
  name  String
  email String  @unique
  orders Order[]
}

model Order {
  id            Int          @id @default(autoincrement())
  fromRestaurant Int
  orderStatus   OrderStatus  @default(NOT_INITIATED)
  placedAt      DateTime?
  fulfilledAt   DateTime?
  orderItems    OrderItem[]
  userId        Int
  user          User         @relation(fields: [userId], references: [id])
}

model OrderItem {
  id         Int @id @default(autoincrement())
  menuItemId Int
  quantity   Int
  order      Order @relation(fields: [orderId], references: [id])
  orderId    Int
}

enum OrderStatus {
  INITIATED
  NOT_INITIATED
  WAITING_FOR_APPROVAL_FROM_RESTAURANT
  WAITING_FOR_DELIVERY_PARTNER
  PLACED
  PICKUP_BY_DELIVERY_PARTNER
  DELIVERED
  READY_TO_PICKUP
}
